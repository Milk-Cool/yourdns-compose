services:
  server:
    build:
      context: server
    ports:
#      - "53:5335"
      - "5335:5335"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-yourdns}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-unsecure}
      POSTGRES_DB: ${POSTGRES_DB:-yourdns}
      ADMIN_KEY: ${ADMIN_KEY:-unsecure}
      DEFAULT_SERVER: ${DEFAULT_SERVER:-1.1.1.1}
      POSTGRES_HOST: postgres
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://server:5339"]
      interval: 1s
      timeout: 2s
      retries: 10
  website:
    build:
      context: website
    ports:
      - "5338:3000"
    environment:
      AUTH_SECRET: ${AUTH_SECRET:-unsecure}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID:-none}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET:-none}
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST:-true}
      AUTH_URL: ${AUTH_URL:-http://localhost:5338}
      YOURDNS_API: http://server:5339
      YOURDNS_KEY: ${ADMIN_KEY:-unsecure}
      DNS_IP: ${DNS_IP:-127.0.0.1}
      DNS_DOH_HOST: ${DNS_DOH_HOST:-localhost}
    env_file: .env
    depends_on:
      server:
        condition: service_healthy
    volumes:
      - ./tlds.txt:/opt/app/tlds.txt
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-yourdns}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-unsecure}
      POSTGRES_DB: ${POSTGRES_DB:-yourdns}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-yourdns}"]
      interval: 1s
      timeout: 2s
      retries: 10